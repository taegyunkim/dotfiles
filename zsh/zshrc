# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Antigen for zsh plugins/modules
if [[ -f "$HOME/.dotfiles/zsh/antigen/antigen.zsh" ]]; then
  source "$HOME/.dotfiles/zsh/antigen/antigen.zsh"
fi

export NVM_LAZY=1

antigen bundle ag
antigen bundle colored-man-pages
antigen bundle command-not-found
antigen bundle common-aliases
antigen bundle git
antigen bundle gnu-utils
antigen bundle nvm
antigen bundle zsh-users/zsh-completions
antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle zsh-users/zsh-history-substring-search
antigen bundle zsh-users/zsh-autosuggestions

antigen theme romkatv/powerlevel10k

antigen apply

# powerlevel10k config, to customize prompt, run `p10k configure` or
# edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# colorful ls command
if [[ -s "$HOME/.dir_colors" ]]; then
  if [[ $OSTYPE == 'darwin'* ]]; then
    alias dircolors=gdircolors
  fi
  eval $(dircolors "$HOME/.dir_colors")
fi
alias ls='ls --color=auto'

# zsh options
source ~/.dotfiles/zsh/completion.zsh
source ~/.dotfiles/zsh/history.zsh

#
# # The next line updates PATH for the Google Cloud SDK.
# if [ -f '/Users/taegyunkim/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/taegyunkim/google-cloud-sdk/path.zsh.inc'; fi
#
# # The next line enables shell command completion for gcloud.
# if [ -f '/Users/taegyunkim/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/taegyunkim/google-cloud-sdk/completion.zsh.inc'; fi
#
# # Check if 'kubectl' is a command in $PATH
# if [ $commands[kubectl] ]; then
#
#   # Placeholder 'kubectl' shell function:
#   # Will only be executed on the first call to 'kubectl'
#   kubectl() {
#
#     # Remove this function, subsequent calls will execute 'kubectl' directly
#     unfunction "$0"
#
#     # Load auto-completion
#     source <(kubectl completion zsh)
#
#     # Execute 'kubectl' binary
#     $0 "$@"
#   }
# fi
#
# # opam configuration
# [[ ! -r /Users/taegyunkim/.opam/opam-init/init.zsh ]] || source /Users/taegyunkim/.opam/opam-init/init.zsh  > /dev/null 2> /dev/null

if [[ $OSTYPE == 'linux-gnu' ]]; then
  export JAVA_HOME=/usr/lib/jvm/default-java
fi

# TODO: use https://github.com/matthieusb/zsh-sdkman for faster loading.
# https://github.com/sdkman/sdkman-cli/issues/977
# THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"

alias rebuds="bluetoothctl remove 34:82:C5:05:EE:48; bluetoothctl scan on; bluetoothctl pair 34:82:C5:05:EE:48; bluetoothctl connect 34:82:C5:05:EE:48"

# export CONDA_AUTO_ACTIVATE_BASE=false
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
# __conda_setup="$('/home/taegyunk/.pyenv/versions/miniconda3-latest/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
# if [ $? -eq 0 ]; then
#     eval "$__conda_setup"
# else
#     if [ -f "/home/taegyunk/.pyenv/versions/miniconda3-latest/etc/profile.d/conda.sh" ]; then
#         . "/home/taegyunk/.pyenv/versions/miniconda3-latest/etc/profile.d/conda.sh"
#     else
#         export PATH="/home/taegyunk/.pyenv/versions/miniconda3-latest/bin:$PATH"
#     fi
# fi
# unset __conda_setup
# <<< conda initialize <<<

bindkey -v '^?' backward-delete-char

export PYENV_ROOT="$HOME/.pyenv"
pyenv() {
  command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
  eval "$(pyenv init - --no-rehash zsh)"
  pyenv "$@"
}
pyenv-brew-relink() {
  rm -f "$HOME/.pyenv/versions/*-brew"
  for i in $(brew --cellar)/python* ; do
    echo "$i"
    ln -s -f -v "$i" "$HOME/.pyenv/versions/${i##/*/}-brew"
  done
  pyenv rehash
}
